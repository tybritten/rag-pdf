# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-08-23T12:41:00+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union, Dict

from pydantic import BaseModel


class SourcesGetResponseItem(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    tags: Optional[List[str]] = None


class ValueType(Enum):
    STRING = "string"
    INT = "int"
    FLOAT = "float"


class ConfigItem(BaseModel):
    name: str
    friendlyName: Optional[str] = None
    valueType: ValueType
    minValue: Union[int, float]
    maxValue: Union[int, float]
    defaultValue: Union[int, float, str] = None
    description: Optional[str] = None


DefaultConfig = list[ConfigItem]

class ConfigGetResponse(BaseModel):
    models: Optional[List[str]] = None
    defaultConfig: Optional[DefaultConfig] = None


class GeneratePostRequest(BaseModel):
    query: str
    tags: Optional[List[str]] = None
    model: Optional[str] = None
    config: Optional[Dict[str, Union[int, float, str]]]


class Event(Enum):
    answer = "answer"
    reference = "reference"
    stop = "stop"


class ReferenceData(BaseModel):
    source: Optional[str] = None
    text: Optional[str] = None
    similarityScore: Optional[float] = None
    page: Optional[int] = None
    url: Optional[str] = None


class GeneratePostResponse(BaseModel):
    event: Event
    data: Union[str, List[ReferenceData]]


class SourcesGetResponse(BaseModel):
    tag: Optional[str] = None
    items: List[str]
